We initially ran the comparisonSort program with Coz's end-to-end
profiling and then profiled for throughput and latency by placing
progress points in the regions we had optimized using our profiler,
TaskProf2.

End-to-end profile
------------------
To perform end-to-end profiling we ran BFS with Coz 80 times.
The end_to_end_profile.png file shows a screenshot of the end-to-end
profile generated by Coz. It highlights a single line, IO.h:70 which
will speedup up the program by at-most 10%.

Throughput profile
------------------
We then placed two throughput progress points at transpose.h:43 and
transpose.h85, which were at the end of the regions we had
optimized. The screenshot of the throughput profile is shown in the
file throughput_profile.png. It shows that optimizing the line at
transpose.h:85 would speedup the program by maximum of 50%.

Latency profile
---------------
Finally, we placed latency progress points around the for region we
optimized in transpose.h. The latency profile is shown in the file
latency_profile.png. The profile shows that optimizing line
transpose.h:87 will not speedup the program.
