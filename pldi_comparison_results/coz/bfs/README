We initially ran the BFS program with Coz's end-to-end profiling and
then profiled for throughput and latency by placing progress points
in the regions we had optimized using our profiler, TaskProf2.

End-to-end profile
------------------
The end_to_end_profile.png file shows a screenshot of the end-to-end
profile generated by Coz. It highlights a single line, IO.h:70 which
will speedup up the program by at-most 5%.

Throughput profile
------------------
We then placed a throughput progress point at graph.h:130, which was
at the end of the body of a for loop we had optimized. The screenshot
of the throughput profile is shown in the file
throughput_profile.png. It shows that optimizing the line at
graph.h:128 would speedup the program by about 25-40%. This line lies
with the for loop that we optimized.

Latency profile
---------------
Finally, we placed latency progress points around the for loop we
optimized in graph.h. The latency profile is shown in the file
latency_profile.png. The profile shows that by optimizing line
graph.h:129 the program will slow down.